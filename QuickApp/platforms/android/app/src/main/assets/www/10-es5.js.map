{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-col_3.entry.js"],"names":["SIZE_TO_MEDIA","matchBreakpoint","breakpoint","undefined","window","matchMedia","mediaQuery","matches","colCss","win","SUPPORTS_VARS","CSS","supports","BREAKPOINTS","Col","hostRef","property","matched","columns","charAt","toUpperCase","slice","getColumns","colSize","modifier","amount","isRTL","calculatePosition","document","dir","mode","style","Object","assign","calculateOffset","calculatePull","calculatePush","calculateSize","gridCss","Grid","fixed","rowCss","Row"],"mappings":"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","file":"10-es5.js","sourcesContent":["import { r as registerInstance, j as forceUpdate, h, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\n\nconst SIZE_TO_MEDIA = {\n  'xs': '(min-width: 0px)',\n  'sm': '(min-width: 576px)',\n  'md': '(min-width: 768px)',\n  'lg': '(min-width: 992px)',\n  'xl': '(min-width: 1200px)',\n};\n// Check if the window matches the media query\n// at the breakpoint passed\n// e.g. matchBreakpoint('sm') => true if screen width exceeds 576px\nconst matchBreakpoint = (breakpoint) => {\n  if (breakpoint === undefined || breakpoint === '') {\n    return true;\n  }\n  if (window.matchMedia) {\n    const mediaQuery = SIZE_TO_MEDIA[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n\nconst colCss = \":host{padding-left:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;width:100%;max-width:100%;min-height:1px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xs, var(--ion-grid-column-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-sm, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-md, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-lg, var(--ion-grid-column-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-right:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-top:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-bottom:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-start:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));-webkit-padding-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px));padding-inline-end:var(--ion-grid-column-padding-xl, var(--ion-grid-column-padding, 5px))}}}\";\n\nconst win = window;\nconst SUPPORTS_VARS = !!(win.CSS && win.CSS.supports && win.CSS.supports('--a: 0'));\nconst BREAKPOINTS = ['', 'xs', 'sm', 'md', 'lg', 'xl'];\nconst Col = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  onResize() {\n    forceUpdate(this);\n  }\n  // Loop through all of the breakpoints to see if the media query\n  // matches and grab the column value from the relevant prop if so\n  getColumns(property) {\n    let matched;\n    for (const breakpoint of BREAKPOINTS) {\n      const matches = matchBreakpoint(breakpoint);\n      // Grab the value of the property, if it exists and our\n      // media query matches we return the value\n      const columns = this[property + breakpoint.charAt(0).toUpperCase() + breakpoint.slice(1)];\n      if (matches && columns !== undefined) {\n        matched = columns;\n      }\n    }\n    // Return the last matched columns since the breakpoints\n    // increase in size and we want to return the largest match\n    return matched;\n  }\n  calculateSize() {\n    const columns = this.getColumns('size');\n    // If size wasn't set for any breakpoint\n    // or if the user set the size without a value\n    // it means we need to stick with the default and return\n    // e.g. <ion-col size-md>\n    if (!columns || columns === '') {\n      return;\n    }\n    // If the size is set to auto then don't calculate a size\n    const colSize = (columns === 'auto')\n      ? 'auto'\n      // If CSS supports variables we should use the grid columns var\n      : SUPPORTS_VARS ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\n        // Convert the columns to a percentage by dividing by the total number\n        // of columns (12) and then multiplying by 100\n        : ((columns / 12) * 100) + '%';\n    return {\n      'flex': `0 0 ${colSize}`,\n      'width': `${colSize}`,\n      'max-width': `${colSize}`\n    };\n  }\n  // Called by push, pull, and offset since they use the same calculations\n  calculatePosition(property, modifier) {\n    const columns = this.getColumns(property);\n    if (!columns) {\n      return;\n    }\n    // If the number of columns passed are greater than 0 and less than\n    // 12 we can position the column, else default to auto\n    const amount = SUPPORTS_VARS\n      // If CSS supports variables we should use the grid columns var\n      ? `calc(calc(${columns} / var(--ion-grid-columns, 12)) * 100%)`\n      // Convert the columns to a percentage by dividing by the total number\n      // of columns (12) and then multiplying by 100\n      : (columns > 0 && columns < 12) ? (columns / 12 * 100) + '%' : 'auto';\n    return {\n      [modifier]: amount\n    };\n  }\n  calculateOffset(isRTL) {\n    return this.calculatePosition('offset', isRTL ? 'margin-right' : 'margin-left');\n  }\n  calculatePull(isRTL) {\n    return this.calculatePosition('pull', isRTL ? 'left' : 'right');\n  }\n  calculatePush(isRTL) {\n    return this.calculatePosition('push', isRTL ? 'right' : 'left');\n  }\n  render() {\n    const isRTL = document.dir === 'rtl';\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true\n      }, style: Object.assign(Object.assign(Object.assign(Object.assign({}, this.calculateOffset(isRTL)), this.calculatePull(isRTL)), this.calculatePush(isRTL)), this.calculateSize()) }, h(\"slot\", null)));\n  }\n};\nCol.style = colCss;\n\nconst gridCss = \":host{padding-left:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));margin-left:auto;margin-right:auto;display:block;-ms-flex:1;flex:1}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xs, var(--ion-grid-padding, 5px))}}@media (min-width: 576px){:host{padding-left:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-sm, var(--ion-grid-padding, 5px))}}}@media (min-width: 768px){:host{padding-left:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-md, var(--ion-grid-padding, 5px))}}}@media (min-width: 992px){:host{padding-left:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-lg, var(--ion-grid-padding, 5px))}}}@media (min-width: 1200px){:host{padding-left:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-right:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-top:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-bottom:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-start:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));-webkit-padding-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px));padding-inline-end:var(--ion-grid-padding-xl, var(--ion-grid-padding, 5px))}}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.grid-fixed){width:var(--ion-grid-width-xs, var(--ion-grid-width, 100%));max-width:100%}@media (min-width: 576px){:host(.grid-fixed){width:var(--ion-grid-width-sm, var(--ion-grid-width, 540px))}}@media (min-width: 768px){:host(.grid-fixed){width:var(--ion-grid-width-md, var(--ion-grid-width, 720px))}}@media (min-width: 992px){:host(.grid-fixed){width:var(--ion-grid-width-lg, var(--ion-grid-width, 960px))}}@media (min-width: 1200px){:host(.grid-fixed){width:var(--ion-grid-width-xl, var(--ion-grid-width, 1140px))}}:host(.ion-no-padding){--ion-grid-column-padding:0;--ion-grid-column-padding-xs:0;--ion-grid-column-padding-sm:0;--ion-grid-column-padding-md:0;--ion-grid-column-padding-lg:0;--ion-grid-column-padding-xl:0}\";\n\nconst Grid = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * If `true`, the grid will have a fixed width based on the screen size.\n     */\n    this.fixed = false;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'grid-fixed': this.fixed\n      } }, h(\"slot\", null)));\n  }\n};\nGrid.style = gridCss;\n\nconst rowCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}\";\n\nconst Row = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"slot\", null)));\n  }\n};\nRow.style = rowCss;\n\nexport { Col as ion_col, Grid as ion_grid, Row as ion_row };\n"]}