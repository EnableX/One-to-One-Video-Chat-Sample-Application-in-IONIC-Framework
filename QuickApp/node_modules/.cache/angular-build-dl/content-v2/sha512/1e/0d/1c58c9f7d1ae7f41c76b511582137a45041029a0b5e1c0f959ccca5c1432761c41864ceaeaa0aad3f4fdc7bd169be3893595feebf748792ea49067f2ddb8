{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-img.entry.js"],"names":["imgCss","Img","hostRef","ionImgWillLoad","ionImgDidLoad","ionError","onLoad","emit","onError","addIO","src","undefined","window","IntersectionObserverEntry","prototype","removeIO","io","IntersectionObserver","data","length","isIntersecting","load","observe","el","setTimeout","loadError","loadSrc","disconnect","decoding","alt","part","style"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMA,MAAM,GAAG,oMAAf;;AAEA,QAAMC,GAAG;AACP,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,qEAAiB,IAAjB,EAAuBA,OAAvB;AACA,aAAKC,cAAL,GAAsB,6DAAY,IAAZ,EAAkB,gBAAlB,EAAoC,CAApC,CAAtB;AACA,aAAKC,aAAL,GAAqB,6DAAY,IAAZ,EAAkB,eAAlB,EAAmC,CAAnC,CAArB;AACA,aAAKC,QAAL,GAAgB,6DAAY,IAAZ,EAAkB,UAAlB,EAA8B,CAA9B,CAAhB;;AACA,aAAKC,MAAL,GAAc,YAAM;AAClB,eAAI,CAACF,aAAL,CAAmBG,IAAnB;AACD,SAFD;;AAGA,aAAKC,OAAL,GAAe,YAAM;AACnB,eAAI,CAACH,QAAL,CAAcE,IAAd;AACD,SAFD;AAGD;;AAZM;AAAA;AAAA,eAaP,sBAAa;AACX,eAAKE,KAAL;AACD;AAfM;AAAA;AAAA,eAgBP,4BAAmB;AACjB,eAAKA,KAAL;AACD;AAlBM;AAAA;AAAA,eAmBP,iBAAQ;AAAA;;AACN,cAAI,KAAKC,GAAL,KAAaC,SAAjB,EAA4B;AAC1B;AACD;;AACD,cAAI,OAAOC,MAAP,KAAkB,WAAlB,IACF,0BAA0BA,MADxB,IAEF,+BAA+BA,MAF7B,IAGF,oBAAoBA,MAAM,CAACC,yBAAP,CAAiCC,SAHvD,EAGkE;AAChE,iBAAKC,QAAL;AACA,iBAAKC,EAAL,GAAU,IAAIC,oBAAJ,CAAyB,UAAAC,IAAI,EAAI;AACzC;;;;;AAKA,kBAAIA,IAAI,CAACA,IAAI,CAACC,MAAL,GAAc,CAAf,CAAJ,CAAsBC,cAA1B,EAA0C;AACxC,sBAAI,CAACC,IAAL;;AACA,sBAAI,CAACN,QAAL;AACD;AACF,aAVS,CAAV;AAWA,iBAAKC,EAAL,CAAQM,OAAR,CAAgB,KAAKC,EAArB;AACD,WAjBD,MAkBK;AACH;AACAC,sBAAU,CAAC;AAAA,qBAAM,MAAI,CAACH,IAAL,EAAN;AAAA,aAAD,EAAoB,GAApB,CAAV;AACD;AACF;AA7CM;AAAA;AAAA,eA8CP,gBAAO;AACL,eAAKI,SAAL,GAAiB,KAAKjB,OAAtB;AACA,eAAKkB,OAAL,GAAe,KAAKhB,GAApB;AACA,eAAKP,cAAL,CAAoBI,IAApB;AACD;AAlDM;AAAA;AAAA,eAmDP,oBAAW;AACT,cAAI,KAAKS,EAAT,EAAa;AACX,iBAAKA,EAAL,CAAQW,UAAR;AACA,iBAAKX,EAAL,GAAUL,SAAV;AACD;AACF;AAxDM;AAAA;AAAA,eAyDP,kBAAS;AACP,iBAAQ,6DAAE,oDAAF,EAAQ;AAAE,qBAAO,oEAAW,IAAX;AAAT,WAAR,EAAqC,6DAAE,KAAF,EAAS;AAAEiB,oBAAQ,EAAE,OAAZ;AAAqBlB,eAAG,EAAE,KAAKgB,OAA/B;AAAwCG,eAAG,EAAE,KAAKA,GAAlD;AAAuDvB,kBAAM,EAAE,KAAKA,MAApE;AAA4EE,mBAAO,EAAE,KAAKiB,SAA1F;AAAqGK,gBAAI,EAAE;AAA3G,WAAT,CAArC,CAAR;AACD;AA3DM;AAAA;AAAA,aA4DP,eAAS;AAAE,iBAAO,6DAAW,IAAX,CAAP;AAA0B;AA5D9B;AAAA;AAAA,aA6DP,eAAsB;AAAE,iBAAO;AAC7B,mBAAO,CAAC,YAAD;AADsB,WAAP;AAEpB;AA/DG;;AAAA;AAAA,OAAT;;AAiEA7B,OAAG,CAAC8B,KAAJ,GAAY/B,MAAZ","file":"13-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\n\nconst imgCss = \":host{display:block;-o-object-fit:contain;object-fit:contain}img{display:block;width:100%;height:100%;-o-object-fit:inherit;object-fit:inherit;-o-object-position:inherit;object-position:inherit}\";\n\nconst Img = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionImgWillLoad = createEvent(this, \"ionImgWillLoad\", 7);\n    this.ionImgDidLoad = createEvent(this, \"ionImgDidLoad\", 7);\n    this.ionError = createEvent(this, \"ionError\", 7);\n    this.onLoad = () => {\n      this.ionImgDidLoad.emit();\n    };\n    this.onError = () => {\n      this.ionError.emit();\n    };\n  }\n  srcChanged() {\n    this.addIO();\n  }\n  componentDidLoad() {\n    this.addIO();\n  }\n  addIO() {\n    if (this.src === undefined) {\n      return;\n    }\n    if (typeof window !== 'undefined' &&\n      'IntersectionObserver' in window &&\n      'IntersectionObserverEntry' in window &&\n      'isIntersecting' in window.IntersectionObserverEntry.prototype) {\n      this.removeIO();\n      this.io = new IntersectionObserver(data => {\n        /**\n         * On slower devices, it is possible for an intersection observer entry to contain multiple\n         * objects in the array. This happens when quickly scrolling an image into view and then out of\n         * view. In this case, the last object represents the current state of the component.\n         */\n        if (data[data.length - 1].isIntersecting) {\n          this.load();\n          this.removeIO();\n        }\n      });\n      this.io.observe(this.el);\n    }\n    else {\n      // fall back to setTimeout for Safari and IE\n      setTimeout(() => this.load(), 200);\n    }\n  }\n  load() {\n    this.loadError = this.onError;\n    this.loadSrc = this.src;\n    this.ionImgWillLoad.emit();\n  }\n  removeIO() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  render() {\n    return (h(Host, { class: getIonMode(this) }, h(\"img\", { decoding: \"async\", src: this.loadSrc, alt: this.alt, onLoad: this.onLoad, onError: this.loadError, part: \"image\" })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"src\": [\"srcChanged\"]\n  }; }\n};\nImg.style = imgCss;\n\nexport { Img as ion_img };\n"]}