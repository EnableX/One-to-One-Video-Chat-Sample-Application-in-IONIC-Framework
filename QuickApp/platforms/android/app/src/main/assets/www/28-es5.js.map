{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js"],"names":["rippleEffectCss","RippleEffect","hostRef","type","x","y","Promise","resolve","rect","el","getBoundingClientRect","width","height","hypotenuse","Math","sqrt","maxDim","max","maxRadius","unbounded","PADDING","initialSize","floor","INITIAL_ORIGIN_SCALE","finalScale","posX","left","posY","top","styleX","styleY","moveX","moveY","div","document","createElement","classList","add","style","setProperty","container","shadowRoot","appendChild","setTimeout","removeRipple","mode","role","ripple","remove"],"mappings":"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","file":"28-es5.js","sourcesContent":["import { r as registerInstance, f as readTask, c as writeTask, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\n\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\n\nconst RippleEffect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * Sets the type of ripple-effect:\n     *\n     * - `bounded`: the ripple effect expands from the user's click position\n     * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\n     *\n     * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\n     * while surfaces for unbounded ripples should have it set to visible.\n     */\n    this.type = 'bounded';\n  }\n  /**\n   * Adds the ripple effect to the parent element.\n   *\n   * @param x The horizontal coordinate of where the ripple should start.\n   * @param y The vertical coordinate of where the ripple should start.\n   */\n  async addRipple(x, y) {\n    return new Promise(resolve => {\n      readTask(() => {\n        const rect = this.el.getBoundingClientRect();\n        const width = rect.width;\n        const height = rect.height;\n        const hypotenuse = Math.sqrt(width * width + height * height);\n        const maxDim = Math.max(height, width);\n        const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n        const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n        const finalScale = maxRadius / initialSize;\n        let posX = x - rect.left;\n        let posY = y - rect.top;\n        if (this.unbounded) {\n          posX = width * 0.5;\n          posY = height * 0.5;\n        }\n        const styleX = posX - initialSize * 0.5;\n        const styleY = posY - initialSize * 0.5;\n        const moveX = width * 0.5 - posX;\n        const moveY = height * 0.5 - posY;\n        writeTask(() => {\n          const div = document.createElement('div');\n          div.classList.add('ripple-effect');\n          const style = div.style;\n          style.top = styleY + 'px';\n          style.left = styleX + 'px';\n          style.width = style.height = initialSize + 'px';\n          style.setProperty('--final-scale', `${finalScale}`);\n          style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n          const container = this.el.shadowRoot || this.el;\n          container.appendChild(div);\n          setTimeout(() => {\n            resolve(() => {\n              removeRipple(div);\n            });\n          }, 225 + 100);\n        });\n      });\n    });\n  }\n  get unbounded() {\n    return this.type === 'unbounded';\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"presentation\", class: {\n        [mode]: true,\n        'unbounded': this.unbounded\n      } }));\n  }\n  get el() { return getElement(this); }\n};\nconst removeRipple = (ripple) => {\n  ripple.classList.add('fade-out');\n  setTimeout(() => {\n    ripple.remove();\n  }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\nRippleEffect.style = rippleEffectCss;\n\nexport { RippleEffect as ion_ripple_effect };\n"]}