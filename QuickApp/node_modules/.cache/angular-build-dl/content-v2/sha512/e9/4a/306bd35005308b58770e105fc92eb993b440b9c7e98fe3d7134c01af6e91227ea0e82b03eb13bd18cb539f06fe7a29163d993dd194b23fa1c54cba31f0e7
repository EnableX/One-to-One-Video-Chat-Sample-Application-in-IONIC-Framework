{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writePath","history","root","direction","state","parsePath","pushState","replaceState","chainToPath","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readPath","loc","pathname","hash","qsStart","indexOf","substr","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","routerIDsToChain","chains","match","maxMatches","routerPathToChain","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getPath","canProceed","setPath","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","parsedPath","waitPromise","warn","safeWriteNavState","_a","win","title","redirectFrom","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","color","style"],"mappings":"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","file":"29-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\nimport { c as componentOnReady, o as debounce } from './helpers-1457892a.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n// Join the non empty segments with \"/\".\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...path], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\n// Remove the prefix segments from the path segments.\n//\n// Return:\n// - null when the path segments do not start with the passed prefix,\n// - the path segments after the prefix otherwise.\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const path = parsePath(pathname).segments;\n  return removePrefix(prefix, path);\n};\n// Parses the path to:\n// - segments an array of '/' separated parts,\n// - queryString (undefined when no query string).\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substr(qsStart + 1);\n      path = path.substr(0, qsStart);\n    }\n    segments = path.split('/')\n      .map(s => s.trim())\n      .filter(s => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise(resolve => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n// Returns whether the given redirect matches the given path segments.\n//\n// A redirect matches when the segments of the path and redirect.from are equal.\n// Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n// The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\nconst matchesRedirect = (path, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > path.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== path[i]) {\n      return false;\n    }\n  }\n  return from.length === path.length;\n};\n// Returns the first redirect matching the path segments or undefined when no match found.\nconst findRouteRedirect = (path, redirects) => {\n  return redirects.find(redirect => matchesRedirect(path, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let score = 0;\n  for (let i = 0; i < len; i++) {\n    const routeId = ids[i];\n    const routeChain = chain[i];\n    // Skip results where the route id does not match the chain at the same index\n    if (routeId.id.toLowerCase() !== routeChain.id) {\n      break;\n    }\n    if (routeId.params) {\n      const routeIdParams = Object.keys(routeId.params);\n      /**\n       * Only compare routes with the chain that have the same number of parameters.\n       */\n      if (routeIdParams.length === routeChain.path.length) {\n        /**\n         * Maps the route's params into a path based on the path variable names,\n         * to compare against the route chain format.\n         *\n         * Before:\n         * ```ts\n         * {\n         *  params: {\n         *    s1: 'a',\n         *    s2: 'b'\n         *  }\n         * }\n         * ```\n         *\n         * After:\n         * ```ts\n         * [':s1',':s2']\n         * ```\n         */\n        const pathWithParams = routeIdParams.map(key => `:${key}`);\n        for (let j = 0; j < pathWithParams.length; j++) {\n          // Skip results where the path variable is not a match\n          if (pathWithParams[j].toLowerCase() !== routeChain.path[j]) {\n            break;\n          }\n          // Weight path matches for the same index higher.\n          score++;\n        }\n      }\n    }\n    // Weight id matches\n    score++;\n  }\n  return score;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave\n    }));\n  }\n  return chain;\n};\n// Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  for (const chain of chains) {\n    const score = matchesIDs(ids, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    return {\n      path: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el)\n    };\n  });\n};\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\nconst flattenNode = (chain, chains, node) => {\n  chain = chain.slice();\n  chain.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getPath());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setPath(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getPath();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    let parsedPath = parsePath(url);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  // This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes.\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && findRouteRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  // This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes.\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments, queryString } = redirect.to;\n      this.setPath(segments, direction, queryString);\n      redirectFrom = redirect.from;\n      path = segments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  // Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n  //\n  // When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n  // Otherwise the beforeEnterHook hook of the target route is executed.\n  async runGuards(to = this.getPath(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = routerPathToChain(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}